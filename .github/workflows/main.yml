name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
      - feature/*
  pull_request:
    branches:
      - dev
      - main

jobs:
  lint-and-test:
    name: Lint and Test Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm ci # `npm ci` is faster and ensures consistency for CI environments

      - name: Run Linter
        run: npm run lint

      - name: Run Tests
        run: npm run test

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint-and-test # Only run after lint-and-test job succeeds

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./dist # Adjust 

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build # Only run after build job succeeds
    if: github.ref == 'refs/heads/dev' # Deploy to staging for pushes to dev branch

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Staging
        run: npx vercel --token=$VERCEL_TOKEN --prod
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_STAGING_TOKEN }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build # Only run after build job succeeds
    if: github.ref == 'refs/heads/main' # Deploy to production for pushes to main branch

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Production
        run: npx vercel --token=$VERCEL_TOKEN --prod
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
